
// Variables Declaration
let video;

let videoIsPlaying;

let poseNet;
let current_pose;
let current_skeleton;


console.log("PoseNet model not Loaded")
// preload all required data
let paTH = "data/AiFi/pickup-events.mp4"
function preload() {
  video = createVideo(paTH,vidLoad);
  console.log("Preload Done ")
}


function setup() {
  console.log("setup Done ")
	video.size(1280,720);
	// video.play();
  videoIsPlaying = false;
  createCanvas(1280, 720); // Not Sure if it is necessary
  poseNet = ml5.poseNet(video,modelLoaded);
  poseNet.on("pose",gotPoses);
  video.hide();
}


function gotPoses(poses)
{
  console.log(poses);
  if(poses.length>0){
    current_pose = poses[0].pose;
    current_skeleton = poses[0].skeleton;
  }
}

function modelLoaded()
{
  console.log("PoseNet model Loaded")
}

//
function draw()
{
  image(video,0,0,width,height);

  if(current_pose){
    let leftE = current_pose.leftEye;
    let rightE = current_pose.rightEye;

    let d = dist(leftE.x,leftE.y,rightE.x,rightE.y);

    console.log("Length of the keypoint ",current_pose.keypoints.length);

    // Draw points for each keypoints
    for(let i=0;i<current_pose.keypoints.length;i++){
      let x = current_pose.keypoints[i].position.x;
      let y = current_pose.keypoints[i].position.y;
      // console.log("X Y",x,y);
      fill(0,0,255);
      ellipse(x,y,16,16);

    }

    // Connect Those points

    for(let i=0;i<current_skeleton.length;i++){
      let a = current_skeleton[i][0];
      let b = current_skeleton[i][1];
      strokeWeight(5);
      stroke(255,0,0);
      line(a.position.x,a.position.y,b.position.x,b.position.y);

    }


  }
}

// This function is called when the video loads
function vidLoad() {
  console.log("Check vidLoad")
  video.stop();
  video.loop();
  videoIsPlaying = true;
}
